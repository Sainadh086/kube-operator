# A demo CRD for the Kopf example operators.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mongodbs.sampledb.beta #plurals.group(name)
spec:
  scope: Namespaced
  group: sampledb.beta
  names:
    kind: MongoDB
    plural: mongodbs
    singular: mongodb
    shortNames:
      - mongo
      - mdb
  versions:
    - name: v1
      served: true
      storage: true
      subresources: { status: { } }  # comment/uncomment for experiments
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
      additionalPrinterColumns:
        - name: Duration
          type: string
          priority: 0
          jsonPath: .spec.duration
          description: For how long the pod should sleep.
        - name: Children
          type: string
          priority: 0
          jsonPath: .status.create_fn.children
          description: The children pods created.
        - name: Message
          type: string
          priority: 0
          jsonPath: .status.create_fn.message
          description: As returned from the handler (sometimes).


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kops-cluster-operator-global
  labels:
    app: kops
rules:
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      # The cluster operator needs to create and manage cluster role bindings in the case of an install where a user
      # has specified they want their cluster role bindings generated
      - clusterrolebindings
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      # The cluster operator requires "get" permissions to view storage class details
      # This is because only a persistent volume of a supported storage class type can be resized
      - storageclasses
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      # The cluster operator requires "list" permissions to view all nodes in a cluster
      # The listing is used to determine the node addresses when NodePort access is configured
      # These addresses are then exposed in the custom resource states
      - nodes
    verbs:
      - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kops-kafka-client
  labels:
    app: kops
rules:
  - apiGroups:
      - ""
    resources:
      # The Kafka clients (Connect, Mirror Maker, etc.) require "get" permissions to view the node they are on
      # This information is used to generate a Rack ID (client.rack option) that is used for consuming from the closest
      # replicas when enabled
      - nodes
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kops-cluster-operator-leader
  labels:
    app: kops
subjects:
  - kind: ServiceAccount
    name: kops-cluster-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: kops-cluster-operator-leader
  apiGroup: rbac.authorization.k8s.io